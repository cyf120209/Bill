package com.example.aa.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.aa.entity.Orders;
import com.example.aa.entity.OrderUser;
import com.example.aa.entity.User;

import com.example.aa.gen.OrdersDao;
import com.example.aa.gen.OrderUserDao;
import com.example.aa.gen.UserDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig ordersDaoConfig;
    private final DaoConfig orderUserDaoConfig;
    private final DaoConfig userDaoConfig;

    private final OrdersDao ordersDao;
    private final OrderUserDao orderUserDao;
    private final UserDao userDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        ordersDaoConfig = daoConfigMap.get(OrdersDao.class).clone();
        ordersDaoConfig.initIdentityScope(type);

        orderUserDaoConfig = daoConfigMap.get(OrderUserDao.class).clone();
        orderUserDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        ordersDao = new OrdersDao(ordersDaoConfig, this);
        orderUserDao = new OrderUserDao(orderUserDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);

        registerDao(Orders.class, ordersDao);
        registerDao(OrderUser.class, orderUserDao);
        registerDao(User.class, userDao);
    }
    
    public void clear() {
        ordersDaoConfig.getIdentityScope().clear();
        orderUserDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
    }

    public OrdersDao getOrdersDao() {
        return ordersDao;
    }

    public OrderUserDao getOrderUserDao() {
        return orderUserDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

}
